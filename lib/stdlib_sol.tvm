.fragment __appendBytes1, {
	.loc stdlib.sol, 160
	OVER
	FIRST
	BREMBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 161
		NEWC
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 162
	SWAP
	UNPAIR
	ROTREV
	STU 8
	SWAP
	PAIR
	.loc stdlib.sol, 0
}

.fragment __parseInteger, {
	.loc stdlib.sol, 126
	OVER
	PUSHCONT {
		.loc stdlib.sol, 127
		PUSHINT 0
		NULL
		PAIR
		BLKDROP2 2, 1
		PUSHINT 1
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 129
	NULL
	.loc stdlib.sol, 130
	PUSHINT 0
	.loc stdlib.sol, 131
	PUSHCONT {
		PUSH S3
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 133
		OVER2
		DIVMOD
		POP S5
		XCPU S4, S2
		.loc stdlib.sol, 134
		PAIR
		POP S2
		.loc stdlib.sol, 135
		INC
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 137
	BLKDROP2 2, 2
	.loc stdlib.sol, 0
}

.fragment __convertIntToHexString, {
	.loc stdlib.sol, 334
	PUSH S3
	LESSINT 0
	.loc stdlib.sol, 335
	ROLL 4
	ABS
	.loc stdlib.sol, 336
	PUSH S5
	FIRST
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 338
	ROT
	PUSHCONT {
		.loc stdlib.sol, 339
		DUP
		PUSHCONT {
			.loc stdlib.sol, 340
			NEWC
			PUSH S6
			PAIR
			POP S6
			.loc stdlib.sol, 341
			DROP
			PUSHINT 127
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 343
		PUSH S5
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S6
		.loc stdlib.sol, 344
		DEC
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 347
	SWAP
	PUSHINT 16
	CALLREF {
		.inline __parseInteger
	}
	.loc stdlib.sol, 349
	PUSH2 S5, S0
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 350
		PUSH S4
		PUSHINT 48
		PUSHINT 32
		CONDSEL
		.loc stdlib.sol, 351
		PUSH2 S6, S1
		SUB
		.loc stdlib.sol, 352
		PUSH2 S0, S4
		MIN
		PUSHCONT {
			.loc stdlib.sol, 353
			PUSH S8
			UNPAIR
			PUXC S3, S1
			STU 8
			SWAP
			PAIR
			POP S9
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 355
		PUSH2 S0, S4
		GREATER
		PUSHCONT {
			.loc stdlib.sol, 356
			NEWC
			PUSH S9
			PAIR
			POP S9
			.loc stdlib.sol, 357
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 358
				PUSH S8
				UNPAIR
				PUXC S3, S1
				STU 8
				SWAP
				PAIR
				POP S9
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 360
			PUSH S4
			ADDCONST 127
		}
		PUSHCONT {
			.loc stdlib.sol, 362
			PUSH S4
		}
		IFELSE
		OVER
		SUB
		POP S5
		.loc stdlib.sol, 0
		DROP2
	}
	IF
	.loc stdlib.sol, 366
	ROLL 3
	PUSHINT 97
	PUSHINT 65
	CONDSEL
	ADDCONST -10
	.loc stdlib.sol, 367
	PUSH2 S1, S3
	MIN
	PUSHCONT {
		.loc stdlib.sol, 369
		PUSH2 S2, S2
		ISNULL
		THROWIF 63
		UNPAIR
		POP S4
		.loc stdlib.sol, 370
		PUSH S7
		UNPAIR
		XCPU S2, S0
		LESSINT 10
		PUSHINT 48
		PUSH S5
		CONDSEL
		ADD
		STUR 8
		SWAP
		PAIR
		POP S7
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 372
	PUSH2 S1, S3
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 373
		NEWC
		PUSH S7
		PAIR
		POP S7
		.loc stdlib.sol, 374
		PUSH2 S1, S3
		SUB
		PUSHCONT {
			.loc stdlib.sol, 376
			PUSH2 S2, S2
			ISNULL
			THROWIF 63
			UNPAIR
			POP S4
			.loc stdlib.sol, 377
			PUSH S7
			UNPAIR
			XCPU S2, S0
			LESSINT 10
			PUSHINT 48
			PUSH S5
			CONDSEL
			ADD
			STUR 8
			SWAP
			PAIR
			POP S7
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 380
	BLKDROP 6
	.loc stdlib.sol, 0
}

.fragment __appendSliceDataAsHex, {
	.loc stdlib.sol, 176
	PUSHCONT {
		DUP
		SBITS
		GTINT 3
	}
	PUSHCONT {
		.loc stdlib.sol, 177
		DUP
		SBITS
		RSHIFT 2
		MULCONST 4
		PUSHPOW2 8
		MIN
		UFITS 9
		.loc stdlib.sol, 178
		DUP2
		LDUX
		POP S3
		PUXC2 S3, S-1, S0
		.loc stdlib.sol, 179
		RSHIFT 2
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 181
	DUP
	SBITS
	PUSHCONT {
		.loc stdlib.sol, 182
		PUSHINT 4
		OVER
		SBITS
		SUB
		.loc stdlib.sol, 183
		PUSH2 S1, S1
		SBITS
		UFITS 9
		LDUX
		POP S3
		.loc stdlib.sol, 184
		LSHIFT 1
		INC
		.loc stdlib.sol, 185
		SWAP
		DEC
		LSHIFT
		.loc stdlib.sol, 186
		PUXC S2, S-1
		PUSHINT 1
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		.loc stdlib.sol, 187
		PUSHINT 95
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 189
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendAnyCast, {
	.loc stdlib.sol, 285
	LDI 1
	SWAP
	.loc stdlib.sol, 286
	PUSHCONT {
		.loc stdlib.sol, 287
		LDU 5
		PU2XC S2, S-1, S1
		.loc stdlib.sol, 288
		LDSLICEX
		POP S3
		CALLREF {
			.inline __appendSliceDataAsHex
		}
		.loc stdlib.sol, 289
		PUSHINT 58
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 0
}

.fragment __appendBytes1NTimes, {
	.loc stdlib.sol, 168
	PUSHCONT {
		.loc stdlib.sol, 169
		DUP2
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 171
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendSliceToStringBuilder, {
	.loc stdlib.sol, 193
	OVER
	FIRST
	BREMBITS
	ADDCONST -7
	.loc stdlib.sol, 194
	PUXCPU S1, S-1, S0
	SBITS
	MIN
	LDSLICEX
	POP S2
	.loc stdlib.sol, 195
	PUSH S2
	UNPAIR
	ROTREV
	STSLICE
	SWAP
	PAIR
	POP S2
	.loc stdlib.sol, 196
	DUP
	SEMPTY
	PUSHCONT {
		.loc stdlib.sol, 198
		DUP
		NEWC
		STSLICE
		.loc stdlib.sol, 199
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 0
	}
	IFNOT
	.loc stdlib.sol, 201
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendStringToStringBuilderWithNoShift, {
	.loc stdlib.sol, 205
	DUP
	CTOS
	.loc stdlib.sol, 206
	PUSHCONT {
		.loc stdlib.sol, 207
		PUSH S2
		UNPAIR
		XCPU2 S1, S2, S2
		SBITS
		LDSLICEX
		POP S4
		STSLICER
		SWAP
		PAIR
		POP S3
		.loc stdlib.sol, 208
		DUP
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 210
		NEWC
		PUSH S3
		PAIR
		POP S3
		.loc stdlib.sol, 211
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 213
	DROP2
	.loc stdlib.sol, 0
}

.fragment __appendStringToStringBuilder, {
	.loc stdlib.sol, 217
	NULL
	.loc stdlib.sol, 218
	PUSH S2
	FIRST
	BBITS
	PUSHCONT {
		.loc stdlib.sol, 219
		ROTREV
		CALLREF {
			.inline __appendStringToStringBuilderWithNoShift
		}
		NIP
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 221
	OVER
	CTOS
	.loc stdlib.sol, 222
	PUSHCONT {
		.loc stdlib.sol, 223
		BLKPUSH 2, 0
		SBITS
		LDSLICEX
		POP S2
		PUXC S4, S-1
		.loc stdlib.sol, 224
		CALLREF {
			.inline __appendSliceToStringBuilder
		}
		POP S4
		.loc stdlib.sol, 225
		DUP
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 227
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 229
	BLKDROP 3
	.loc stdlib.sol, 0
}

.fragment __createStringBuilder, {
	.loc stdlib.sol, 143
	NEWC
	NULL
	PAIR
	.loc stdlib.sol, 0
}

.fragment __makeString, {
	.loc stdlib.sol, 149
	UNPAIR
	SWAP
	.loc stdlib.sol, 150
	PUSHCONT {
		OVER
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 151
		OVER
		UNPAIR
		POP S3
		.loc stdlib.sol, 152
		STBREF
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 155
	ENDC
	NIP
	.loc stdlib.sol, 0
}

.fragment __subCell, {
	.loc stdlib.sol, 444
	PUSH S2
	PUSHINT 127
	DIVMOD
	.loc stdlib.sol, 445
	OVER
	NEQINT 0
	OVER
	EQINT 0
	AND
	PUSHCONT {
		.loc stdlib.sol, 446
		DROP
		DEC
		.loc stdlib.sol, 447
		PUSHINT 127
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 450
	PUSH S5
	CTOS
	.loc stdlib.sol, 451
	PUSH S2
	PUSHCONT {
		.loc stdlib.sol, 452
		DUP
		SREFS
		EQINT 1
		THROWIFNOT 70
		.loc stdlib.sol, 453
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 456
	OVER
	MULCONST 8
	POP S2
	.loc stdlib.sol, 457
	DUP
	SBITS
	PUSH S2
	GEQ
	THROWIFNOT 70
	.loc stdlib.sol, 458
	OVER
	SDSKIPFIRST
	.loc stdlib.sol, 460
	PUSH S4
	MULCONST 8
	POP S5
	.loc stdlib.sol, 461
	CALLREF {
		.inline __createStringBuilder
	}
	.loc stdlib.sol, 462
	PUSHCONT {
		.loc stdlib.sol, 463
		OVER
		SBITS
		PUSH S6
		MIN
		UFITS 10
		.loc stdlib.sol, 464
		PUSH2 S6, S0
		SUB
		POP S7
		PUXC S2, S-1
		.loc stdlib.sol, 465
		LDSLICEX
		POP S3
		.loc stdlib.sol, 466
		CALLREF {
			.inline __appendSliceToStringBuilder
		}
		.loc stdlib.sol, 467
		PUSH S5
		EQINT 0
		PUSH S2
		SEMPTY
		OR
		IFRETALT
		.loc stdlib.sol, 470
		OVER
		LDREFRTOS
		NIP
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 472
	BLKSWAP 2, 4
	SWAP
	EQINT 0
	OR
	THROWIFNOT 70
	.loc stdlib.sol, 473
	CALLREF {
		.inline __makeString
	}
	BLKDROP2 5, 1
	.loc stdlib.sol, 0
}

.fragment __arraySlice, {
	.loc stdlib.sol, 438
	DUP2
	LEQ
	THROWIFNOT 70
	.loc stdlib.sol, 439
	OVER
	SUB
	.loc stdlib.sol, 440
	FALSE
	CALLREF {
		.inline __subCell
	}
	.loc stdlib.sol, 0
}

.fragment __concatenateStrings, {
	.loc stdlib.sol, 502
	CALLREF {
		.inline __createStringBuilder
	}
	.loc stdlib.sol, 503
	ROT
	CALLREF {
		.inline __appendStringToStringBuilderWithNoShift
	}
	.loc stdlib.sol, 504
	SWAP
	CALLREF {
		.inline __appendStringToStringBuilder
	}
	.loc stdlib.sol, 505
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __convertIntToString, {
	.loc stdlib.sol, 235
	PUSH S2
	LESSINT 0
	.loc stdlib.sol, 236
	ROLL 3
	ABS
	.loc stdlib.sol, 237
	PUSH S4
	FIRST
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 239
	ROT
	PUSHCONT {
		.loc stdlib.sol, 240
		DUP
		PUSHCONT {
			.loc stdlib.sol, 241
			NEWC
			PUSH S5
			PAIR
			POP S5
			.loc stdlib.sol, 242
			DROP
			PUSHINT 127
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 244
		PUSH S4
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S5
		.loc stdlib.sol, 245
		DEC
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 248
	SWAP
	PUSHINT 10
	CALLREF {
		.inline __parseInteger
	}
	.loc stdlib.sol, 250
	PUSH2 S4, S0
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 251
		PUSH S3
		PUSHINT 48
		PUSHINT 32
		CONDSEL
		.loc stdlib.sol, 252
		PUSH2 S5, S1
		SUB
		.loc stdlib.sol, 253
		PUSH2 S0, S4
		MIN
		PUSHCONT {
			.loc stdlib.sol, 254
			PUSH S7
			UNPAIR
			PUXC S3, S1
			STU 8
			SWAP
			PAIR
			POP S8
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 256
		PUSH2 S0, S4
		GREATER
		PUSHCONT {
			.loc stdlib.sol, 257
			NEWC
			PUSH S8
			PAIR
			POP S8
			.loc stdlib.sol, 258
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 259
				PUSH S7
				UNPAIR
				PUXC S3, S1
				STU 8
				SWAP
				PAIR
				POP S8
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 261
			PUSH S4
			ADDCONST 127
		}
		PUSHCONT {
			.loc stdlib.sol, 263
			PUSH S4
		}
		IFELSE
		OVER
		SUB
		POP S5
		.loc stdlib.sol, 0
		DROP2
	}
	IF
	.loc stdlib.sol, 267
	PUSH2 S0, S2
	MIN
	PUSHCONT {
		.loc stdlib.sol, 269
		OVER
		UNPAIR
		POP S3
		.loc stdlib.sol, 270
		PUSH S6
		UNPAIR
		XCHG S2
		ADDCONST 48
		STUR 8
		SWAP
		PAIR
		POP S6
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 272
	PUSH2 S0, S2
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 273
		NEWC
		PUSH S6
		PAIR
		POP S6
		PUSH2 S0, S2
		.loc stdlib.sol, 274
		SUB
		PUSHCONT {
			.loc stdlib.sol, 276
			OVER
			UNPAIR
			POP S3
			.loc stdlib.sol, 277
			PUSH S6
			UNPAIR
			XCHG S2
			ADDCONST 48
			STUR 8
			SWAP
			PAIR
			POP S6
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 281
	BLKDROP 5
	.loc stdlib.sol, 0
}

.fragment __convertAddressToHexString, {
	.loc stdlib.sol, 295
	LDU 2
	XCPU S1, S0
	.loc stdlib.sol, 296
	EQINT 2
	PUSHCONT {
		.loc stdlib.sol, 297
		BLKPUSH 2, 2
		CALLREF {
			.inline __appendAnyCast
		}
		.loc stdlib.sol, 298
		LDI 8
		POP S4
		PUSHINT 0
		DUP
		CALLREF {
			.inline __convertIntToString
		}
		.loc stdlib.sol, 299
		PUSHINT 58
		CALLREF {
			.inline __appendBytes1
		}
		.loc stdlib.sol, 300
		PUSH S2
		LDU 256
		POP S4
		PUSHINT 64
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		POP S3
	}
	PUSHCONT {
		DUP
		EQINT 1
		PUSHCONT {
			.loc stdlib.sol, 302
			PUSH S2
			PUSHINT 58
			CALLREF {
				.inline __appendBytes1
			}
			POP S3
			.loc stdlib.sol, 303
			OVER
			LDU 9
			XCPU2 S3, S4, S3
			BLKDROP2 2, 2
			.loc stdlib.sol, 304
			CALLREF {
				.inline __appendSliceDataAsHex
			}
			POP S3
		}
		PUSHCONT {
			DUP
			EQINT 3
			PUSHCONT {
				.loc stdlib.sol, 306
				BLKPUSH 2, 2
				CALLREF {
					.inline __appendAnyCast
				}
				SWAP
				POP S4
				.loc stdlib.sol, 307
				PUSHINT 9
				SDSKIPFIRST
				POP S2
				BLKPUSH 2, 2
				.loc stdlib.sol, 308
				LDI 32
				POP S4
				PUSHINT 0
				DUP
				CALLREF {
					.inline __convertIntToString
				}
				.loc stdlib.sol, 309
				PUSHINT 58
				CALLREF {
					.inline __appendBytes1
				}
				.loc stdlib.sol, 310
				PUSH S2
				CALLREF {
					.inline __appendSliceDataAsHex
				}
				POP S3
				.loc stdlib.sol, 0
			}
			IF
		}
		IFELSE
	}
	IFELSE
	.loc stdlib.sol, 312
	DROP2
	.loc stdlib.sol, 0
}

.fragment __convertBoolToStringBuilder, {
	.loc stdlib.sol, 384
	PUSHCONT {
		PUSHREF {
			.blob x74727565
		}
		CTOS
	}
	PUSHCONT {
		PUSHREF {
			.blob x66616c7365
		}
		CTOS
	}
	IFELSE
	CALLREF {
		.inline __appendSliceToStringBuilder
	}
	.loc stdlib.sol, 0
}

.fragment __convertFixedPointToString, {
	.loc stdlib.sol, 316
	PUSH S2
	LESSINT 0
	PUSHCONT {
		.loc stdlib.sol, 317
		PUSH S3
		FIRST
		BREMBITS
		LESSINT 8
		PUSHCONT {
			.loc stdlib.sol, 318
			NEWC
			PUSH S4
			PAIR
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 320
		PUSH S3
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S4
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 322
	ROT
	ABS
	SWAP
	DIVMOD
	.loc stdlib.sol, 323
	PUXC S3, S1
	PUSHINT 0
	DUP
	CALLREF {
		.inline __convertIntToString
	}
	POP S3
	.loc stdlib.sol, 324
	PUSH S2
	FIRST
	BREMBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 325
		NEWC
		PUSH S3
		PAIR
		POP S3
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 327
	PUSH S2
	UNPAIR
	PUSHINT 46
	ROT
	STU 8
	SWAP
	PAIR
	POP S3
	SWAP
	.loc stdlib.sol, 328
	TRUE
	CALLREF {
		.inline __convertIntToString
	}
	.loc stdlib.sol, 0
}

.fragment __gasGasPrice, {
	.loc stdlib.sol, 90
	PUSHINT 20
	PUSHINT 21
	CONDSEL
	CONFIGOPTPARAM
	.loc stdlib.sol, 91
	DUP
	ISNULL
	THROWIF 68
	.loc stdlib.sol, 92
	DUP
	ISNULL
	THROWIF 63
	CTOS
	.loc stdlib.sol, 93
	LDU 8
	LDU 64
	LDU 64
	LDU 8
	PLDU 64
	BLKDROP2 4, 1
	.loc stdlib.sol, 0
}

.fragment __gasToTon, {
	.loc stdlib.sol, 86
	CALLREF {
		.inline __gasGasPrice
	}
	PUSHPOW2 16
	MULDIVC
	.loc stdlib.sol, 0
}

.fragment __stackReverse, {
	.loc stdlib.sol, 697
	NULL
	.loc stdlib.sol, 698
	PUSHCONT {
		OVER
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 699
		OVER
		UNPAIR
		POP S3
		SWAP
		PAIR
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 700
	NIP
	.loc stdlib.sol, 0
}

.fragment __stackSort, {
	.loc stdlib.sol, 655
	OVER
	ISNULL
	PUSHCONT {
		.loc stdlib.sol, 656
		DROP2
		NULL
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 659
	NULL
	.loc stdlib.sol, 660
	PUSHINT 0
	.loc stdlib.sol, 661
	PUSHCONT {
		PUSH S3
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 663
		PUSH S3
		UNPAIR
		POP S5
		NULL
		PAIR
		.loc stdlib.sol, 664
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 661
		INC
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 667
	PUSHCONT {
		DUP
		GTINT 1
	}
	PUSHCONT {
		.loc stdlib.sol, 668
		NULL
		.loc stdlib.sol, 669
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 670
			PUSH S2
			UNPAIR
			POP S4
			SWAP
			PAIR
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 671
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc stdlib.sol, 672
			NULL
			.loc stdlib.sol, 673
			PUSH S3
			UNPAIR
			.loc stdlib.sol, 674
			UNPAIR
			POP S6
			.loc stdlib.sol, 675
			PUSHCONT {
				OVER
				ISNULL
				NOT
				OVER
				ISNULL
				NOT
				AND
			}
			PUSHCONT {
				.loc stdlib.sol, 676
				OVER
				FIRST
				OVER
				FIRST
				PUSH S8
				PUSH C3
				CALLX
				PUSHCONT {
					.loc stdlib.sol, 677
					BLKPUSH 2, 2
					UNPAIR
					POP S4
				}
				PUSHCONT {
					.loc stdlib.sol, 679
					PUSH2 S2, S0
					UNPAIR
					POP S3
				}
				IFELSE
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 681
			PUSHCONT {
				OVER
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 682
				BLKPUSH 2, 2
				UNPAIR
				POP S4
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 683
			PUSHCONT {
				DUP
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 684
				PUSH2 S2, S0
				UNPAIR
				POP S3
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 685
			DROP2
			CALLREF {
				.inline __stackReverse
			}
			.loc stdlib.sol, 686
			SWAP
			PAIR
			.loc stdlib.sol, 0
		}
		WHILE
		.loc stdlib.sol, 688
		POP S2
		.loc stdlib.sol, 689
		INC
		RSHIFT 1
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 691
	DROP
	UNPAIR
	DROP
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __strstr, {
	.loc stdlib.sol, 552
	NULL
	.loc stdlib.sol, 553
	PUSH S2
	CTOS
	.loc stdlib.sol, 554
	PUSH S2
	CTOS
	.loc stdlib.sol, 555
	PUSHINT 0
	FALSE ; decl return flag
	PUSHCONT {
		.loc stdlib.sol, 556
		OVER2
		PUSHCONT {
			.loc stdlib.sol, 528
			OVER
			SBITS
			.loc stdlib.sol, 529
			OVER
			SBITS
			.loc stdlib.sol, 530
			FALSE ; decl return flag
			PUSHCONT {
				PUSH S3
				SEMPTY
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 531
				PUSH S2
				PUSHCONT {
					.loc stdlib.sol, 532
					PUSH S4
					SREFS
					PUSHCONT {
						BLKDROP 5
						FALSE
						PUSHINT 4
						RETALT
					}
					IFNOTJMP
					.loc stdlib.sol, 534
					PUSH S4
					LDREFRTOS
					XCPU S6, S6
					BLKDROP2 2, 1
					.loc stdlib.sol, 535
					SBITS
					POP S3
					.loc stdlib.sol, 0
				}
				IFNOT
				.loc stdlib.sol, 537
				OVER
				PUSHCONT {
					.loc stdlib.sol, 538
					PUSH S3
					LDREFRTOS
					XCPU S5, S5
					BLKDROP2 2, 1
					.loc stdlib.sol, 539
					SBITS
					POP S2
					.loc stdlib.sol, 0
				}
				IFNOT
				.loc stdlib.sol, 541
				BLKPUSH 2, 2
				MIN
				.loc stdlib.sol, 542
				PUSH2 S5, S0
				LDSLICEX
				POP S7
				.loc stdlib.sol, 543
				PUSH2 S5, S1
				LDSLICEX
				POP S7
				.loc stdlib.sol, 544
				SDEQ
				PUSHCONT {
					BLKDROP 6
					FALSE
					PUSHINT 4
					RETALT
				}
				IFNOTJMP
				.loc stdlib.sol, 546
				PUSH2 S3, S0
				SUB
				POP S4
				.loc stdlib.sol, 547
				PUSH S2
				SUBR
				POP S2
				.loc stdlib.sol, 0
			}
			WHILEBRK
			IFRET
			.loc stdlib.sol, 549
			BLKDROP 4
			TRUE
			.loc stdlib.sol, 527
		}
		CALLX
		.loc stdlib.sol, 0
		PUSHCONT {
			DROP
			BLKDROP2 5, 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 558
		PUSH S3
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 560
		PUSH S3
		SBITS
		PUSHCONT {
			.loc stdlib.sol, 561
			PUSH S3
			LDREFRTOS
			NIP
			POP S4
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 562
		PUSH S3
		LDU 8
		XCPU S5, S3
		BLKDROP2 2, 1
		.loc stdlib.sol, 563
		INC
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	EQINT 4
	IFRET
	BLKDROP 6
	.loc stdlib.sol, 565
	NULL
	.loc stdlib.sol, 0
}

.fragment __toLowerCase, {
	.loc stdlib.sol, 570
	.inline __createStringBuilder
	.loc stdlib.sol, 571
	SWAP
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S0
		.loc stdlib.sol, 573
		GTINT 64
		OVER
		LESSINT 91
		AND
		PUSHCONT {
			.loc stdlib.sol, 574
			ADDCONST 32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 575
		PUXC S3, S-1
		CALLREF {
			.inline __appendBytes1
		}
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	DROP2
	.loc stdlib.sol, 577
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __toUpperCase, {
	.loc stdlib.sol, 582
	.inline __createStringBuilder
	.loc stdlib.sol, 583
	SWAP
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S0
		.loc stdlib.sol, 585
		GTINT 96
		OVER
		LESSINT 123
		AND
		PUSHCONT {
			.loc stdlib.sol, 586
			ADDCONST -32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 587
		PUXC S3, S-1
		CALLREF {
			.inline __appendBytes1
		}
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	DROP2
	.loc stdlib.sol, 589
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __tonToGas, {
	.loc stdlib.sol, 82
	PUSHPOW2 16
	SWAP
	CALLREF {
		.inline __gasGasPrice
	}
	MULDIV
	.loc stdlib.sol, 0
}

.fragment insert_pubkey, {
	.loc stdlib.sol, 29
	SWAP
	CTOS
	.loc stdlib.sol, 30
	NEWC
	.loc stdlib.sol, 33
	OVER
	LDI 1
	POP S3
	PUSHCONT {
		.loc stdlib.sol, 34
		STONE
		.loc stdlib.sol, 35
		OVER
		LDU 32
		POP S3
		SWAP
		.loc stdlib.sol, 36
		STONE
		STU 32
	}
	PUSHCONT {
		.loc stdlib.sol, 38
		STZERO
	}
	IFELSE
	.loc stdlib.sol, 42
	OVER
	LDI 1
	POP S3
	PUSHCONT {
		.loc stdlib.sol, 43
		STONE
		.loc stdlib.sol, 44
		OVER
		LDI 1
		LDI 1
		POP S4
		XCHG S2
		.loc stdlib.sol, 45
		STI 1
		STI 1
	}
	PUSHCONT {
		.loc stdlib.sol, 47
		STZERO
	}
	IFELSE
	.loc stdlib.sol, 51
	OVER
	LDDICT
	POP S3
	SWAP
	STDICT
	.loc stdlib.sol, 55
	NULL
	.loc stdlib.sol, 56
	PUSH S2
	LDI 1
	POP S4
	PUSHCONT {
		.loc stdlib.sol, 57
		PUSH S2
		LDREFRTOS
		SWAP
		POP S4
		.loc stdlib.sol, 58
		PLDDICT
		NIP
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 60
	XCHG3 S1, S3, S0
	PUSHINT 0
	XCHG S2
	NEWC
	STU 256
	ROTREV
	PUSHINT 64
	DICTUSETB
	.loc stdlib.sol, 62
	NEWC
	STDICT
	.loc stdlib.sol, 63
	SWAP
	STONE
	.loc stdlib.sol, 64
	STBREF
	.loc stdlib.sol, 68
	OVER
	LDDICT
	POP S3
	SWAP
	STDICT
	.loc stdlib.sol, 70
	SWAP
	SEMPTY
	THROWIFNOT 55
	.loc stdlib.sol, 72
	ENDC
	.loc stdlib.sol, 0
}

.fragment __replayProtection, {
	.loc stdlib.sol, 76
	GETGLOB 3
	OVER
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 77
	DUP
	NOW
	PUSHINT 1000
	MUL
	PUSHINT 1800000
	ADD
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 78
	SETGLOB 3
	.loc stdlib.sol, 0
}

.fragment __exp, {
	.loc stdlib.sol, 98
	DUP2
	OR
	THROWIFNOT 69
	.loc stdlib.sol, 99
	PUSHINT 1
	.loc stdlib.sol, 100
	PUSHCONT {
		OVER
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 101
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 102
			PUSH S2
			MUL
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 103
		PUSH2 S2, S2
		MUL
		POP S3
		.loc stdlib.sol, 104
		OVER
		RSHIFT 1
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 106
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __qexp, {
	.loc stdlib.sol, 110
	DUP
	ISNAN
	DUP
	PUSHCONT {
		DROP
		BLKPUSH 2, 0
		ISNAN
		THROWIF 80
		EQINT 0
		PUSH S2
		ISNAN
		NOT
		AND
		DUP
		PUSHCONT {
			DROP
			PUSH2 S1, S1
			ISNAN
			THROWIF 80
			EQINT 0
		}
		IF
	}
	IFNOT
	PUSHCONT {
		DROP2
		PUSHNAN
	}
	IFJMP
	.loc stdlib.sol, 114
	DUP
	ISNAN
	THROWIF 80
	.loc stdlib.sol, 115
	PUSHINT 1
	.loc stdlib.sol, 116
	PUSHCONT {
		OVER
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 117
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 118
			PUSH S2
			QMUL
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 119
		PUSH2 S2, S2
		QMUL
		POP S3
		.loc stdlib.sol, 120
		OVER
		RSHIFT 1
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 122
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __stoi, {
	.loc stdlib.sol, 393
	CTOS
	.loc stdlib.sol, 394
	DUP
	SBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 395
		DROP
		NULL
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 398
	DUP
	SBITS
	GTINT 7
	DUP
	PUSHCONT {
		DROP
		DUP
		PLDU 8
		EQINT 45
	}
	IF
	.loc stdlib.sol, 399
	DUP
	PUSHCONT {
		.loc stdlib.sol, 400
		OVER
		PUSHINT 8
		SDSKIPFIRST
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 402
	OVER
	SBITS
	GTINT 15
	DUP
	PUSHCONT {
		DROP
		OVER
		PLDU 16
		PUSHINT 12408
		EQUAL
	}
	IF
	.loc stdlib.sol, 403
	DUP
	PUSHCONT {
		.loc stdlib.sol, 404
		PUSH S2
		PUSHINT 16
		SDSKIPFIRST
		POP S3
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 406
	PUSHINT 0
	.loc stdlib.sol, 407
	PUSH S3
	SBITS
	RSHIFT 3
	.loc stdlib.sol, 408
	FALSE ; decl return flag
	ROLL 3
	PUSHCONT {
		.loc stdlib.sol, 409
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 410
			PUSH S5
			LDU 8
			POP S7
			.loc stdlib.sol, 411
			PUSH S4
			MULCONST 16
			POP S5
			.loc stdlib.sol, 412
			DUP
			GTINT 47
			OVER
			LESSINT 58
			AND
			PUSHCONT {
				.loc stdlib.sol, 413
				DUP
				ADDCONST -48
				PUSH S5
				ADD
				POP S5
				.loc stdlib.sol, 0
			}
			PUSHCONT {
				DUP
				GTINT 64
				OVER
				LESSINT 71
				AND
				PUSHCONT {
					.loc stdlib.sol, 415
					DUP
					ADDCONST -55
					PUSH S5
					ADD
					POP S5
					.loc stdlib.sol, 0
				}
				PUSHCONT {
					DUP
					GTINT 96
					OVER
					LESSINT 103
					AND
					PUSHCONT {
						.loc stdlib.sol, 417
						DUP
						ADDCONST -87
						PUSH S5
						ADD
						POP S5
						.loc stdlib.sol, 0
					}
					PUSHCONT {
						.loc stdlib.sol, 419
						BLKDROP 7
						NULL
						PUSHINT 4
						RETALT
						.loc stdlib.sol, 0
					}
					IFELSE
				}
				IFELSE
			}
			IFELSE
			DROP
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 423
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 424
			PUSH S5
			LDU 8
			POP S7
			.loc stdlib.sol, 425
			DUP
			LESSINT 48
			OVER
			GTINT 57
			OR
			PUSHCONT {
				BLKDROP 7
				NULL
				PUSHINT 4
				RETALT
			}
			IFJMP
			.loc stdlib.sol, 427
			PUSH S4
			MULCONST 10
			SWAP
			ADDCONST -48
			ADD
			POP S4
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	IFRET
	.loc stdlib.sol, 430
	DROP
	SWAP
	PUSHCONT {
		.loc stdlib.sol, 431
		NEGATE
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 432
	NIP
	.loc stdlib.sol, 0
}

.fragment __compareStrings, {
	.loc stdlib.sol, 480
	SWAP
	CTOS
	.loc stdlib.sol, 481
	SWAP
	CTOS
	.loc stdlib.sol, 482
	FALSE ; decl return flag
	PUSHCONT {
		.loc stdlib.sol, 483
		BLKPUSH 2, 2
		SDLEXCMP
		.loc stdlib.sol, 484
		DUP
		PUSHCONT {
			.loc stdlib.sol, 485
			BLKDROP2 3, 1
			PUSHINT 4
			RETALT
			.loc stdlib.sol, 0
		}
		IFJMP
		.loc stdlib.sol, 487
		DROP
		PUSH S2
		SREFS
		.loc stdlib.sol, 488
		PUSH S2
		SREFS
		.loc stdlib.sol, 489
		DUP2
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 491
		PUSH2 S0, S1
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT -1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 493
		ADD
		PUSHCONT {
			BLKDROP 3
			PUSHINT 0
			PUSHINT 4
			RETALT
		}
		IFNOTJMP
		.loc stdlib.sol, 495
		PUSH S2
		LDREFRTOS
		XCPU S4, S3
		BLKDROP2 2, 1
		.loc stdlib.sol, 496
		LDREFRTOS
		NIP
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	IFRET
	.loc stdlib.sol, 498
	DROP2
	PUSHINT 0
	.loc stdlib.sol, 0
}

.fragment __strchr, {
	.loc stdlib.sol, 508
	NULL
	.loc stdlib.sol, 509
	PUSHINT 0
	.loc stdlib.sol, 510
	ROLL 3
	CTOS
	NULL
	FALSE ; decl return flag
	PUSHCONT {
		PUSH S2
		SEMPTY
		NOT
	}
	PUSHCONT {
		PUSH S2
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 3
		XCPU2 S2, S1, S5
		.loc stdlib.sol, 511
		EQUAL
		PUSHCONT {
			XCHG S3
			BLKDROP2 5, 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 513
		PUSH S3
		INC
		POP S4
		.loc stdlib.sol, 0
	}
	WHILEBRK
	IFRET
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __strrchr, {
	.loc stdlib.sol, 517
	NULL
	.loc stdlib.sol, 518
	PUSHINT 0
	.loc stdlib.sol, 519
	ROLL 3
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S4
		.loc stdlib.sol, 520
		EQUAL
		PUSHCONT {
			.loc stdlib.sol, 521
			PUSH S2
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 522
		PUSH S2
		INC
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __stateInitHash, {
	.loc stdlib.sol, 594
	NEWC
	.loc stdlib.sol, 596
	STSLICECONST x020134
	.loc stdlib.sol, 608
	ROT
	STUR 16
	.loc stdlib.sol, 609
	STU 16
	.loc stdlib.sol, 611
	ROT
	STUR 256
	.loc stdlib.sol, 612
	STU 256
	.loc stdlib.sol, 613
	ENDC
	CTOS
	SHA256U
	.loc stdlib.sol, 0
}

.fragment __forwardFee, {
	.loc stdlib.sol, 617
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 618
	LDU 1
	SWAP
	.loc stdlib.sol, 619
	PUSHCONT {
		.loc stdlib.sol, 630
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 624
		LDU 3
		LDMSGADDR
		LDMSGADDR
		LDVARUINT16
		LDDICT
		LDVARUINT16
		BLKDROP2 6, 1
		.loc stdlib.sol, 628
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

.fragment __importFee, {
	.loc stdlib.sol, 635
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 636
	LDU 2
	SWAP
	.loc stdlib.sol, 637
	EQINT 2
	PUSHCONT {
		.loc stdlib.sol, 640
		LDMSGADDR
		LDMSGADDR
		BLKDROP2 2, 1
		.loc stdlib.sol, 641
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 643
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

.fragment __qand, {
	.loc stdlib.sol, 704
	OVER
	ISNAN
	DUP
	PUSHCONT {
		DROP
		PUSH2 S1, S1
		ISNAN
		THROWIF 80
		NEQINT 0
	}
	IFNOT
	DUP
	PUSHCONT {
		DROP
		DUP
		ISNAN
		DUP
		PUSHCONT {
			DROP
			BLKPUSH 2, 0
			ISNAN
			THROWIF 80
			NEQINT 0
		}
		IFNOT
	}
	IF
	PUSHCONT {
		QAND
	}
	IFJMP
	.loc stdlib.sol, 708
	DROP2
	PUSHINT 0
	.loc stdlib.sol, 0
}

.fragment __qor, {
	.loc stdlib.sol, 712
	OVER
	ISNAN
	DUP
	PUSHCONT {
		DROP
		PUSH2 S1, S1
		ISNAN
		THROWIF 80
		NEQINT -1
	}
	IFNOT
	DUP
	PUSHCONT {
		DROP
		DUP
		ISNAN
		DUP
		PUSHCONT {
			DROP
			BLKPUSH 2, 0
			ISNAN
			THROWIF 80
			NEQINT -1
		}
		IFNOT
	}
	IF
	PUSHCONT {
		QOR
	}
	IFJMP
	.loc stdlib.sol, 716
	DROP2
	PUSHINT -1
	.loc stdlib.sol, 0
}

