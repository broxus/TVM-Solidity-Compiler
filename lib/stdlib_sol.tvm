.fragment __appendBytes1, {
	.loc stdlib.sol, 121
	OVER
	FIRST
	BREMBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 122
		NEWC
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 123
	SWAP
	UNPAIR
	ROTREV
	STU 8
	SWAP
	PAIR
	.loc stdlib.sol, 0
}

.fragment __parseInteger, {
	.loc stdlib.sol, 87
	OVER
	PUSHCONT {
		.loc stdlib.sol, 88
		PUSHINT 0
		NULL
		PAIR
		BLKDROP2 2, 1
		PUSHINT 1
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 90
	NULL
	.loc stdlib.sol, 91
	PUSHINT 0
	.loc stdlib.sol, 92
	PUSHCONT {
		PUSH S3
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 94
		OVER2
		DIVMOD
		POP S5
		XCPU S4, S2
		.loc stdlib.sol, 95
		PAIR
		POP S2
		.loc stdlib.sol, 96
		INC
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 98
	BLKDROP2 2, 2
	.loc stdlib.sol, 0
}

.fragment __convertIntToHexString, {
	.loc stdlib.sol, 295
	PUSH S3
	LESSINT 0
	.loc stdlib.sol, 296
	ROLL 4
	ABS
	.loc stdlib.sol, 297
	PUSH S5
	FIRST
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 299
	ROT
	PUSHCONT {
		.loc stdlib.sol, 300
		DUP
		PUSHCONT {
			.loc stdlib.sol, 301
			NEWC
			PUSH S6
			PAIR
			POP S6
			.loc stdlib.sol, 302
			DROP
			PUSHINT 127
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 304
		PUSH S5
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S6
		.loc stdlib.sol, 305
		DEC
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 308
	SWAP
	PUSHINT 16
	CALLREF {
		.inline __parseInteger
	}
	.loc stdlib.sol, 310
	PUSH2 S5, S0
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 311
		PUSH S4
		PUSHINT 48
		PUSHINT 32
		CONDSEL
		.loc stdlib.sol, 312
		PUSH2 S6, S1
		SUB
		.loc stdlib.sol, 313
		PUSH2 S0, S4
		MIN
		PUSHCONT {
			.loc stdlib.sol, 314
			PUSH S8
			UNPAIR
			PUXC S3, S1
			STU 8
			SWAP
			PAIR
			POP S9
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 316
		PUSH2 S0, S4
		GREATER
		PUSHCONT {
			.loc stdlib.sol, 317
			NEWC
			PUSH S9
			PAIR
			POP S9
			.loc stdlib.sol, 318
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 319
				PUSH S8
				UNPAIR
				PUXC S3, S1
				STU 8
				SWAP
				PAIR
				POP S9
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 321
			PUSH S4
			ADDCONST 127
		}
		PUSHCONT {
			.loc stdlib.sol, 323
			PUSH S4
		}
		IFELSE
		OVER
		SUB
		POP S5
		.loc stdlib.sol, 0
		DROP2
	}
	IF
	.loc stdlib.sol, 327
	ROLL 3
	PUSHINT 97
	PUSHINT 65
	CONDSEL
	ADDCONST -10
	.loc stdlib.sol, 328
	PUSH2 S1, S3
	MIN
	PUSHCONT {
		.loc stdlib.sol, 330
		PUSH2 S2, S2
		ISNULL
		THROWIF 63
		UNPAIR
		POP S4
		.loc stdlib.sol, 331
		PUSH S7
		UNPAIR
		XCPU S2, S0
		LESSINT 10
		PUSHINT 48
		PUSH S5
		CONDSEL
		ADD
		STUR 8
		SWAP
		PAIR
		POP S7
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 333
	PUSH2 S1, S3
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 334
		NEWC
		PUSH S7
		PAIR
		POP S7
		.loc stdlib.sol, 335
		PUSH2 S1, S3
		SUB
		PUSHCONT {
			.loc stdlib.sol, 337
			PUSH2 S2, S2
			ISNULL
			THROWIF 63
			UNPAIR
			POP S4
			.loc stdlib.sol, 338
			PUSH S7
			UNPAIR
			XCPU S2, S0
			LESSINT 10
			PUSHINT 48
			PUSH S5
			CONDSEL
			ADD
			STUR 8
			SWAP
			PAIR
			POP S7
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 341
	BLKDROP 6
	.loc stdlib.sol, 0
}

.fragment __appendSliceDataAsHex, {
	.loc stdlib.sol, 137
	PUSHCONT {
		DUP
		SBITS
		GTINT 3
	}
	PUSHCONT {
		.loc stdlib.sol, 138
		DUP
		SBITS
		RSHIFT 2
		MULCONST 4
		PUSHPOW2 8
		MIN
		UFITS 9
		.loc stdlib.sol, 139
		DUP2
		LDUX
		POP S3
		PUXC2 S3, S-1, S0
		.loc stdlib.sol, 140
		RSHIFT 2
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 142
	DUP
	SBITS
	PUSHCONT {
		.loc stdlib.sol, 143
		PUSHINT 4
		OVER
		SBITS
		SUB
		.loc stdlib.sol, 144
		PUSH2 S1, S1
		SBITS
		UFITS 9
		LDUX
		POP S3
		.loc stdlib.sol, 145
		LSHIFT 1
		INC
		.loc stdlib.sol, 146
		SWAP
		DEC
		LSHIFT
		.loc stdlib.sol, 147
		PUXC S2, S-1
		PUSHINT 1
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		.loc stdlib.sol, 148
		PUSHINT 95
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 150
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendAnyCast, {
	.loc stdlib.sol, 246
	LDI 1
	SWAP
	.loc stdlib.sol, 247
	PUSHCONT {
		.loc stdlib.sol, 248
		LDU 5
		PU2XC S2, S-1, S1
		.loc stdlib.sol, 249
		LDSLICEX
		POP S3
		CALLREF {
			.inline __appendSliceDataAsHex
		}
		.loc stdlib.sol, 250
		PUSHINT 58
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 0
}

.fragment __appendBytes1NTimes, {
	.loc stdlib.sol, 129
	PUSHCONT {
		.loc stdlib.sol, 130
		DUP2
		CALLREF {
			.inline __appendBytes1
		}
		POP S2
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 132
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendSliceToStringBuilder, {
	.loc stdlib.sol, 154
	OVER
	FIRST
	BREMBITS
	ADDCONST -7
	.loc stdlib.sol, 155
	PUXCPU S1, S-1, S0
	SBITS
	MIN
	LDSLICEX
	POP S2
	.loc stdlib.sol, 156
	PUSH S2
	UNPAIR
	ROTREV
	STSLICE
	SWAP
	PAIR
	POP S2
	.loc stdlib.sol, 157
	DUP
	SEMPTY
	PUSHCONT {
		.loc stdlib.sol, 159
		DUP
		NEWC
		STSLICE
		.loc stdlib.sol, 160
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 0
	}
	IFNOT
	.loc stdlib.sol, 162
	DROP
	.loc stdlib.sol, 0
}

.fragment __appendStringToStringBuilderWithNoShift, {
	.loc stdlib.sol, 166
	DUP
	CTOS
	.loc stdlib.sol, 167
	PUSHCONT {
		.loc stdlib.sol, 168
		PUSH S2
		UNPAIR
		XCPU2 S1, S2, S2
		SBITS
		LDSLICEX
		POP S4
		STSLICER
		SWAP
		PAIR
		POP S3
		.loc stdlib.sol, 169
		DUP
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 171
		NEWC
		PUSH S3
		PAIR
		POP S3
		.loc stdlib.sol, 172
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 174
	DROP2
	.loc stdlib.sol, 0
}

.fragment __appendStringToStringBuilder, {
	.loc stdlib.sol, 178
	NULL
	.loc stdlib.sol, 179
	PUSH S2
	FIRST
	BBITS
	PUSHCONT {
		.loc stdlib.sol, 180
		ROTREV
		CALLREF {
			.inline __appendStringToStringBuilderWithNoShift
		}
		NIP
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 182
	OVER
	CTOS
	.loc stdlib.sol, 183
	PUSHCONT {
		.loc stdlib.sol, 184
		BLKPUSH 2, 0
		SBITS
		LDSLICEX
		POP S2
		PUXC S4, S-1
		.loc stdlib.sol, 185
		CALLREF {
			.inline __appendSliceToStringBuilder
		}
		POP S4
		.loc stdlib.sol, 186
		DUP
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 188
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 190
	BLKDROP 3
	.loc stdlib.sol, 0
}

.fragment __createStringBuilder, {
	.loc stdlib.sol, 104
	NEWC
	NULL
	PAIR
	.loc stdlib.sol, 0
}

.fragment __makeString, {
	.loc stdlib.sol, 110
	UNPAIR
	SWAP
	.loc stdlib.sol, 111
	PUSHCONT {
		OVER
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 112
		OVER
		UNPAIR
		POP S3
		.loc stdlib.sol, 113
		STBREF
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 116
	ENDC
	NIP
	.loc stdlib.sol, 0
}

.fragment __subCell, {
	.loc stdlib.sol, 405
	PUSH S2
	PUSHINT 127
	DIVMOD
	.loc stdlib.sol, 406
	OVER
	NEQINT 0
	OVER
	EQINT 0
	AND
	PUSHCONT {
		.loc stdlib.sol, 407
		DROP
		DEC
		.loc stdlib.sol, 408
		PUSHINT 127
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 411
	PUSH S5
	CTOS
	.loc stdlib.sol, 412
	PUSH S2
	PUSHCONT {
		.loc stdlib.sol, 413
		DUP
		SREFS
		EQINT 1
		THROWIFNOT 70
		.loc stdlib.sol, 414
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 417
	OVER
	MULCONST 8
	POP S2
	.loc stdlib.sol, 418
	DUP
	SBITS
	PUSH S2
	GEQ
	THROWIFNOT 70
	.loc stdlib.sol, 419
	OVER
	SDSKIPFIRST
	.loc stdlib.sol, 421
	PUSH S4
	MULCONST 8
	POP S5
	.loc stdlib.sol, 422
	CALLREF {
		.inline __createStringBuilder
	}
	.loc stdlib.sol, 423
	PUSHCONT {
		.loc stdlib.sol, 424
		OVER
		SBITS
		PUSH S6
		MIN
		UFITS 10
		.loc stdlib.sol, 425
		PUSH2 S6, S0
		SUB
		POP S7
		PUXC S2, S-1
		.loc stdlib.sol, 426
		LDSLICEX
		POP S3
		.loc stdlib.sol, 427
		CALLREF {
			.inline __appendSliceToStringBuilder
		}
		.loc stdlib.sol, 428
		PUSH S5
		EQINT 0
		PUSH S2
		SEMPTY
		OR
		IFRETALT
		.loc stdlib.sol, 431
		OVER
		LDREFRTOS
		NIP
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	.loc stdlib.sol, 433
	BLKSWAP 2, 4
	SWAP
	EQINT 0
	OR
	THROWIFNOT 70
	.loc stdlib.sol, 434
	CALLREF {
		.inline __makeString
	}
	BLKDROP2 5, 1
	.loc stdlib.sol, 0
}

.fragment __arraySlice, {
	.loc stdlib.sol, 399
	DUP2
	LEQ
	THROWIFNOT 70
	.loc stdlib.sol, 400
	OVER
	SUB
	.loc stdlib.sol, 401
	FALSE
	CALLREF {
		.inline __subCell
	}
	.loc stdlib.sol, 0
}

.fragment __concatenateStrings, {
	.loc stdlib.sol, 463
	CALLREF {
		.inline __createStringBuilder
	}
	.loc stdlib.sol, 464
	ROT
	CALLREF {
		.inline __appendStringToStringBuilderWithNoShift
	}
	.loc stdlib.sol, 465
	SWAP
	CALLREF {
		.inline __appendStringToStringBuilder
	}
	.loc stdlib.sol, 466
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __convertIntToString, {
	.loc stdlib.sol, 196
	PUSH S2
	LESSINT 0
	.loc stdlib.sol, 197
	ROLL 3
	ABS
	.loc stdlib.sol, 198
	PUSH S4
	FIRST
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 200
	ROT
	PUSHCONT {
		.loc stdlib.sol, 201
		DUP
		PUSHCONT {
			.loc stdlib.sol, 202
			NEWC
			PUSH S5
			PAIR
			POP S5
			.loc stdlib.sol, 203
			DROP
			PUSHINT 127
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 205
		PUSH S4
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S5
		.loc stdlib.sol, 206
		DEC
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 209
	SWAP
	PUSHINT 10
	CALLREF {
		.inline __parseInteger
	}
	.loc stdlib.sol, 211
	PUSH2 S4, S0
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 212
		PUSH S3
		PUSHINT 48
		PUSHINT 32
		CONDSEL
		.loc stdlib.sol, 213
		PUSH2 S5, S1
		SUB
		.loc stdlib.sol, 214
		PUSH2 S0, S4
		MIN
		PUSHCONT {
			.loc stdlib.sol, 215
			PUSH S7
			UNPAIR
			PUXC S3, S1
			STU 8
			SWAP
			PAIR
			POP S8
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 217
		PUSH2 S0, S4
		GREATER
		PUSHCONT {
			.loc stdlib.sol, 218
			NEWC
			PUSH S8
			PAIR
			POP S8
			.loc stdlib.sol, 219
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 220
				PUSH S7
				UNPAIR
				PUXC S3, S1
				STU 8
				SWAP
				PAIR
				POP S8
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 222
			PUSH S4
			ADDCONST 127
		}
		PUSHCONT {
			.loc stdlib.sol, 224
			PUSH S4
		}
		IFELSE
		OVER
		SUB
		POP S5
		.loc stdlib.sol, 0
		DROP2
	}
	IF
	.loc stdlib.sol, 228
	PUSH2 S0, S2
	MIN
	PUSHCONT {
		.loc stdlib.sol, 230
		OVER
		UNPAIR
		POP S3
		.loc stdlib.sol, 231
		PUSH S6
		UNPAIR
		XCHG S2
		ADDCONST 48
		STUR 8
		SWAP
		PAIR
		POP S6
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 233
	PUSH2 S0, S2
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 234
		NEWC
		PUSH S6
		PAIR
		POP S6
		PUSH2 S0, S2
		.loc stdlib.sol, 235
		SUB
		PUSHCONT {
			.loc stdlib.sol, 237
			OVER
			UNPAIR
			POP S3
			.loc stdlib.sol, 238
			PUSH S6
			UNPAIR
			XCHG S2
			ADDCONST 48
			STUR 8
			SWAP
			PAIR
			POP S6
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 242
	BLKDROP 5
	.loc stdlib.sol, 0
}

.fragment __convertAddressToHexString, {
	.loc stdlib.sol, 256
	LDU 2
	XCPU S1, S0
	.loc stdlib.sol, 257
	EQINT 2
	PUSHCONT {
		.loc stdlib.sol, 258
		BLKPUSH 2, 2
		CALLREF {
			.inline __appendAnyCast
		}
		.loc stdlib.sol, 259
		LDI 8
		POP S4
		PUSHINT 0
		DUP
		CALLREF {
			.inline __convertIntToString
		}
		.loc stdlib.sol, 260
		PUSHINT 58
		CALLREF {
			.inline __appendBytes1
		}
		.loc stdlib.sol, 261
		PUSH S2
		LDU 256
		POP S4
		PUSHINT 64
		TRUE
		DUP
		CALLREF {
			.inline __convertIntToHexString
		}
		POP S3
	}
	PUSHCONT {
		DUP
		EQINT 1
		PUSHCONT {
			.loc stdlib.sol, 263
			PUSH S2
			PUSHINT 58
			CALLREF {
				.inline __appendBytes1
			}
			POP S3
			.loc stdlib.sol, 264
			OVER
			LDU 9
			XCPU2 S3, S4, S3
			BLKDROP2 2, 2
			.loc stdlib.sol, 265
			CALLREF {
				.inline __appendSliceDataAsHex
			}
			POP S3
		}
		PUSHCONT {
			DUP
			EQINT 3
			PUSHCONT {
				.loc stdlib.sol, 267
				BLKPUSH 2, 2
				CALLREF {
					.inline __appendAnyCast
				}
				SWAP
				POP S4
				.loc stdlib.sol, 268
				PUSHINT 9
				SDSKIPFIRST
				POP S2
				BLKPUSH 2, 2
				.loc stdlib.sol, 269
				LDI 32
				POP S4
				PUSHINT 0
				DUP
				CALLREF {
					.inline __convertIntToString
				}
				.loc stdlib.sol, 270
				PUSHINT 58
				CALLREF {
					.inline __appendBytes1
				}
				.loc stdlib.sol, 271
				PUSH S2
				CALLREF {
					.inline __appendSliceDataAsHex
				}
				POP S3
				.loc stdlib.sol, 0
			}
			IF
		}
		IFELSE
	}
	IFELSE
	.loc stdlib.sol, 273
	DROP2
	.loc stdlib.sol, 0
}

.fragment __convertBoolToStringBuilder, {
	.loc stdlib.sol, 345
	PUSHCONT {
		PUSHREF {
			.blob x74727565
		}
		CTOS
	}
	PUSHCONT {
		PUSHREF {
			.blob x66616c7365
		}
		CTOS
	}
	IFELSE
	CALLREF {
		.inline __appendSliceToStringBuilder
	}
	.loc stdlib.sol, 0
}

.fragment __convertFixedPointToString, {
	.loc stdlib.sol, 277
	PUSH S2
	LESSINT 0
	PUSHCONT {
		.loc stdlib.sol, 278
		PUSH S3
		FIRST
		BREMBITS
		LESSINT 8
		PUSHCONT {
			.loc stdlib.sol, 279
			NEWC
			PUSH S4
			PAIR
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 281
		PUSH S3
		UNPAIR
		PUSHINT 45
		ROT
		STU 8
		SWAP
		PAIR
		POP S4
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 283
	ROT
	ABS
	SWAP
	DIVMOD
	.loc stdlib.sol, 284
	PUXC S3, S1
	PUSHINT 0
	DUP
	CALLREF {
		.inline __convertIntToString
	}
	POP S3
	.loc stdlib.sol, 285
	PUSH S2
	FIRST
	BREMBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 286
		NEWC
		PUSH S3
		PAIR
		POP S3
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 288
	PUSH S2
	UNPAIR
	PUSHINT 46
	ROT
	STU 8
	SWAP
	PAIR
	POP S3
	SWAP
	.loc stdlib.sol, 289
	TRUE
	CALLREF {
		.inline __convertIntToString
	}
	.loc stdlib.sol, 0
}

.fragment __gasGasPrice, {
	.loc stdlib.sol, 51
	PUSHINT 20
	PUSHINT 21
	CONDSEL
	CONFIGOPTPARAM
	.loc stdlib.sol, 52
	DUP
	ISNULL
	THROWIF 68
	.loc stdlib.sol, 53
	DUP
	ISNULL
	THROWIF 63
	CTOS
	.loc stdlib.sol, 54
	LDU 8
	LDU 64
	LDU 64
	LDU 8
	PLDU 64
	BLKDROP2 4, 1
	.loc stdlib.sol, 0
}

.fragment __gasToTon, {
	.loc stdlib.sol, 47
	CALLREF {
		.inline __gasGasPrice
	}
	PUSHPOW2 16
	MULDIVC
	.loc stdlib.sol, 0
}

.fragment __stackReverse, {
	.loc stdlib.sol, 658
	NULL
	.loc stdlib.sol, 659
	PUSHCONT {
		OVER
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 660
		OVER
		UNPAIR
		POP S3
		SWAP
		PAIR
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 661
	NIP
	.loc stdlib.sol, 0
}

.fragment __stackSort, {
	.loc stdlib.sol, 616
	OVER
	ISNULL
	PUSHCONT {
		.loc stdlib.sol, 617
		DROP2
		NULL
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 620
	NULL
	.loc stdlib.sol, 621
	PUSHINT 0
	.loc stdlib.sol, 622
	PUSHCONT {
		PUSH S3
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 624
		PUSH S3
		UNPAIR
		POP S5
		NULL
		PAIR
		.loc stdlib.sol, 625
		PUSH S2
		PAIR
		POP S2
		.loc stdlib.sol, 622
		INC
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 628
	PUSHCONT {
		DUP
		GTINT 1
	}
	PUSHCONT {
		.loc stdlib.sol, 629
		NULL
		.loc stdlib.sol, 630
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 631
			PUSH S2
			UNPAIR
			POP S4
			SWAP
			PAIR
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 632
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc stdlib.sol, 633
			NULL
			.loc stdlib.sol, 634
			PUSH S3
			UNPAIR
			.loc stdlib.sol, 635
			UNPAIR
			POP S6
			.loc stdlib.sol, 636
			PUSHCONT {
				OVER
				ISNULL
				NOT
				OVER
				ISNULL
				NOT
				AND
			}
			PUSHCONT {
				.loc stdlib.sol, 637
				OVER
				FIRST
				OVER
				FIRST
				PUSH S8
				PUSH C3
				CALLX
				PUSHCONT {
					.loc stdlib.sol, 638
					BLKPUSH 2, 2
					UNPAIR
					POP S4
				}
				PUSHCONT {
					.loc stdlib.sol, 640
					PUSH2 S2, S0
					UNPAIR
					POP S3
				}
				IFELSE
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 642
			PUSHCONT {
				OVER
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 643
				BLKPUSH 2, 2
				UNPAIR
				POP S4
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 644
			PUSHCONT {
				DUP
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 645
				PUSH2 S2, S0
				UNPAIR
				POP S3
				SWAP
				PAIR
				POP S3
				.loc stdlib.sol, 0
			}
			WHILE
			.loc stdlib.sol, 646
			DROP2
			CALLREF {
				.inline __stackReverse
			}
			.loc stdlib.sol, 647
			SWAP
			PAIR
			.loc stdlib.sol, 0
		}
		WHILE
		.loc stdlib.sol, 649
		POP S2
		.loc stdlib.sol, 650
		INC
		RSHIFT 1
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 652
	DROP
	UNPAIR
	DROP
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __strstr, {
	.loc stdlib.sol, 513
	NULL
	.loc stdlib.sol, 514
	PUSH S2
	CTOS
	.loc stdlib.sol, 515
	PUSH S2
	CTOS
	.loc stdlib.sol, 516
	PUSHINT 0
	FALSE ; decl return flag
	PUSHCONT {
		.loc stdlib.sol, 517
		OVER2
		PUSHCONT {
			.loc stdlib.sol, 489
			OVER
			SBITS
			.loc stdlib.sol, 490
			OVER
			SBITS
			.loc stdlib.sol, 491
			FALSE ; decl return flag
			PUSHCONT {
				PUSH S3
				SEMPTY
				NOT
			}
			PUSHCONT {
				.loc stdlib.sol, 492
				PUSH S2
				PUSHCONT {
					.loc stdlib.sol, 493
					PUSH S4
					SREFS
					PUSHCONT {
						BLKDROP 5
						FALSE
						PUSHINT 4
						RETALT
					}
					IFNOTJMP
					.loc stdlib.sol, 495
					PUSH S4
					LDREFRTOS
					XCPU S6, S6
					BLKDROP2 2, 1
					.loc stdlib.sol, 496
					SBITS
					POP S3
					.loc stdlib.sol, 0
				}
				IFNOT
				.loc stdlib.sol, 498
				OVER
				PUSHCONT {
					.loc stdlib.sol, 499
					PUSH S3
					LDREFRTOS
					XCPU S5, S5
					BLKDROP2 2, 1
					.loc stdlib.sol, 500
					SBITS
					POP S2
					.loc stdlib.sol, 0
				}
				IFNOT
				.loc stdlib.sol, 502
				BLKPUSH 2, 2
				MIN
				.loc stdlib.sol, 503
				PUSH2 S5, S0
				LDSLICEX
				POP S7
				.loc stdlib.sol, 504
				PUSH2 S5, S1
				LDSLICEX
				POP S7
				.loc stdlib.sol, 505
				SDEQ
				PUSHCONT {
					BLKDROP 6
					FALSE
					PUSHINT 4
					RETALT
				}
				IFNOTJMP
				.loc stdlib.sol, 507
				PUSH2 S3, S0
				SUB
				POP S4
				.loc stdlib.sol, 508
				PUSH S2
				SUBR
				POP S2
				.loc stdlib.sol, 0
			}
			WHILEBRK
			IFRET
			.loc stdlib.sol, 510
			BLKDROP 4
			TRUE
			.loc stdlib.sol, 488
		}
		CALLX
		.loc stdlib.sol, 0
		PUSHCONT {
			DROP
			BLKDROP2 5, 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 519
		PUSH S3
		SEMPTY
		IFRETALT
		.loc stdlib.sol, 521
		PUSH S3
		SBITS
		PUSHCONT {
			.loc stdlib.sol, 522
			PUSH S3
			LDREFRTOS
			NIP
			POP S4
			.loc stdlib.sol, 0
		}
		IFNOT
		.loc stdlib.sol, 523
		PUSH S3
		LDU 8
		XCPU S5, S3
		BLKDROP2 2, 1
		.loc stdlib.sol, 524
		INC
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	EQINT 4
	IFRET
	BLKDROP 6
	.loc stdlib.sol, 526
	NULL
	.loc stdlib.sol, 0
}

.fragment __toLowerCase, {
	.loc stdlib.sol, 531
	.inline __createStringBuilder
	.loc stdlib.sol, 532
	SWAP
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S0
		.loc stdlib.sol, 534
		GTINT 64
		OVER
		LESSINT 91
		AND
		PUSHCONT {
			.loc stdlib.sol, 535
			ADDCONST 32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 536
		PUXC S3, S-1
		CALLREF {
			.inline __appendBytes1
		}
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	DROP2
	.loc stdlib.sol, 538
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __toUpperCase, {
	.loc stdlib.sol, 543
	.inline __createStringBuilder
	.loc stdlib.sol, 544
	SWAP
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S0
		.loc stdlib.sol, 546
		GTINT 96
		OVER
		LESSINT 123
		AND
		PUSHCONT {
			.loc stdlib.sol, 547
			ADDCONST -32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 548
		PUXC S3, S-1
		CALLREF {
			.inline __appendBytes1
		}
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	DROP2
	.loc stdlib.sol, 550
	CALLREF {
		.inline __makeString
	}
	.loc stdlib.sol, 0
}

.fragment __tonToGas, {
	.loc stdlib.sol, 43
	PUSHPOW2 16
	SWAP
	CALLREF {
		.inline __gasGasPrice
	}
	MULDIV
	.loc stdlib.sol, 0
}

.fragment __timeReplayProtection, {
	.loc stdlib.sol, 22
	LDU 64
	SWAP
	.loc stdlib.sol, 23
	GETGLOB 3
	OVER
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 24
	DUP
	NOW
	PUSHINT 1000
	MUL
	PUSHINT 1800000
	ADD
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 25
	SETGLOB 3
	.loc stdlib.sol, 0
}

.fragment __seqnoReplayProtection, {
	.loc stdlib.sol, 30
	LDU 64
	SWAP
	.loc stdlib.sol, 31
	GETGLOB 3
	INC
	OVER
	EQUAL
	THROWIFNOT 52
	.loc stdlib.sol, 32
	SETGLOB 3
	.loc stdlib.sol, 0
}

.fragment __checkExpire, {
	.loc stdlib.sol, 37
	LDU 32
	NOW
	ROT
	.loc stdlib.sol, 38
	LESS
	THROWIFNOT 57
	.loc stdlib.sol, 0
}

.fragment __exp, {
	.loc stdlib.sol, 59
	DUP2
	OR
	THROWIFNOT 69
	.loc stdlib.sol, 60
	PUSHINT 1
	.loc stdlib.sol, 61
	PUSHCONT {
		OVER
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 62
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 63
			PUSH S2
			MUL
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 64
		PUSH2 S2, S2
		MUL
		POP S3
		.loc stdlib.sol, 65
		OVER
		RSHIFT 1
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 67
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __qexp, {
	.loc stdlib.sol, 71
	DUP
	ISNAN
	DUP
	PUSHCONT {
		DROP
		BLKPUSH 2, 0
		ISNAN
		THROWIF 80
		EQINT 0
		PUSH S2
		ISNAN
		NOT
		AND
		DUP
		PUSHCONT {
			DROP
			PUSH2 S1, S1
			ISNAN
			THROWIF 80
			EQINT 0
		}
		IF
	}
	IFNOT
	PUSHCONT {
		DROP2
		PUSHNAN
	}
	IFJMP
	.loc stdlib.sol, 75
	DUP
	ISNAN
	THROWIF 80
	.loc stdlib.sol, 76
	PUSHINT 1
	.loc stdlib.sol, 77
	PUSHCONT {
		OVER
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 78
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 79
			PUSH S2
			QMUL
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 80
		PUSH2 S2, S2
		QMUL
		POP S3
		.loc stdlib.sol, 81
		OVER
		RSHIFT 1
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 83
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __stoi, {
	.loc stdlib.sol, 354
	CTOS
	.loc stdlib.sol, 355
	DUP
	SBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 356
		DROP
		NULL
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 359
	DUP
	SBITS
	GTINT 7
	DUP
	PUSHCONT {
		DROP
		DUP
		PLDU 8
		EQINT 45
	}
	IF
	.loc stdlib.sol, 360
	DUP
	PUSHCONT {
		.loc stdlib.sol, 361
		OVER
		PUSHINT 8
		SDSKIPFIRST
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 363
	OVER
	SBITS
	GTINT 15
	DUP
	PUSHCONT {
		DROP
		OVER
		PLDU 16
		PUSHINT 12408
		EQUAL
	}
	IF
	.loc stdlib.sol, 364
	DUP
	PUSHCONT {
		.loc stdlib.sol, 365
		PUSH S2
		PUSHINT 16
		SDSKIPFIRST
		POP S3
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 367
	PUSHINT 0
	.loc stdlib.sol, 368
	PUSH S3
	SBITS
	RSHIFT 3
	.loc stdlib.sol, 369
	FALSE ; decl return flag
	ROLL 3
	PUSHCONT {
		.loc stdlib.sol, 370
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 371
			PUSH S5
			LDU 8
			POP S7
			.loc stdlib.sol, 372
			PUSH S4
			MULCONST 16
			POP S5
			.loc stdlib.sol, 373
			DUP
			GTINT 47
			OVER
			LESSINT 58
			AND
			PUSHCONT {
				.loc stdlib.sol, 374
				DUP
				ADDCONST -48
				PUSH S5
				ADD
				POP S5
				.loc stdlib.sol, 0
			}
			PUSHCONT {
				DUP
				GTINT 64
				OVER
				LESSINT 71
				AND
				PUSHCONT {
					.loc stdlib.sol, 376
					DUP
					ADDCONST -55
					PUSH S5
					ADD
					POP S5
					.loc stdlib.sol, 0
				}
				PUSHCONT {
					DUP
					GTINT 96
					OVER
					LESSINT 103
					AND
					PUSHCONT {
						.loc stdlib.sol, 378
						DUP
						ADDCONST -87
						PUSH S5
						ADD
						POP S5
						.loc stdlib.sol, 0
					}
					PUSHCONT {
						.loc stdlib.sol, 380
						BLKDROP 7
						NULL
						PUSHINT 4
						RETALT
						.loc stdlib.sol, 0
					}
					IFELSE
				}
				IFELSE
			}
			IFELSE
			DROP
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 384
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 385
			PUSH S5
			LDU 8
			POP S7
			.loc stdlib.sol, 386
			DUP
			LESSINT 48
			OVER
			GTINT 57
			OR
			PUSHCONT {
				BLKDROP 7
				NULL
				PUSHINT 4
				RETALT
			}
			IFJMP
			.loc stdlib.sol, 388
			PUSH S4
			MULCONST 10
			SWAP
			ADDCONST -48
			ADD
			POP S4
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	IFRET
	.loc stdlib.sol, 391
	DROP
	SWAP
	PUSHCONT {
		.loc stdlib.sol, 392
		NEGATE
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 393
	NIP
	.loc stdlib.sol, 0
}

.fragment __compareStrings, {
	.loc stdlib.sol, 441
	SWAP
	CTOS
	.loc stdlib.sol, 442
	SWAP
	CTOS
	.loc stdlib.sol, 443
	FALSE ; decl return flag
	PUSHCONT {
		.loc stdlib.sol, 444
		BLKPUSH 2, 2
		SDLEXCMP
		.loc stdlib.sol, 445
		DUP
		PUSHCONT {
			.loc stdlib.sol, 446
			BLKDROP2 3, 1
			PUSHINT 4
			RETALT
			.loc stdlib.sol, 0
		}
		IFJMP
		.loc stdlib.sol, 448
		DROP
		PUSH S2
		SREFS
		.loc stdlib.sol, 449
		PUSH S2
		SREFS
		.loc stdlib.sol, 450
		DUP2
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 452
		PUSH2 S0, S1
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT -1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 454
		ADD
		PUSHCONT {
			BLKDROP 3
			PUSHINT 0
			PUSHINT 4
			RETALT
		}
		IFNOTJMP
		.loc stdlib.sol, 456
		PUSH S2
		LDREFRTOS
		XCPU S4, S3
		BLKDROP2 2, 1
		.loc stdlib.sol, 457
		LDREFRTOS
		NIP
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	IFRET
	.loc stdlib.sol, 459
	DROP2
	PUSHINT 0
	.loc stdlib.sol, 0
}

.fragment __strchr, {
	.loc stdlib.sol, 469
	NULL
	.loc stdlib.sol, 470
	PUSHINT 0
	.loc stdlib.sol, 471
	ROLL 3
	CTOS
	NULL
	FALSE ; decl return flag
	PUSHCONT {
		PUSH S2
		SEMPTY
		NOT
	}
	PUSHCONT {
		PUSH S2
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 3
		XCPU2 S2, S1, S5
		.loc stdlib.sol, 472
		EQUAL
		PUSHCONT {
			XCHG S3
			BLKDROP2 5, 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 474
		PUSH S3
		INC
		POP S4
		.loc stdlib.sol, 0
	}
	WHILEBRK
	IFRET
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __strrchr, {
	.loc stdlib.sol, 478
	NULL
	.loc stdlib.sol, 479
	PUSHINT 0
	.loc stdlib.sol, 480
	ROLL 3
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			LDREFRTOS
			NIP
			LDU 8
		}
		IFNOT
		BLKDROP2 2, 2
		XCPU2 S1, S0, S4
		.loc stdlib.sol, 481
		EQUAL
		PUSHCONT {
			.loc stdlib.sol, 482
			PUSH S2
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 483
		PUSH S2
		INC
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __stateInitHash, {
	.loc stdlib.sol, 555
	NEWC
	.loc stdlib.sol, 557
	STSLICECONST x020134
	.loc stdlib.sol, 569
	ROT
	STUR 16
	.loc stdlib.sol, 570
	STU 16
	.loc stdlib.sol, 572
	ROT
	STUR 256
	.loc stdlib.sol, 573
	STU 256
	.loc stdlib.sol, 574
	ENDC
	CTOS
	SHA256U
	.loc stdlib.sol, 0
}

.fragment __forwardFee, {
	.loc stdlib.sol, 578
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 579
	LDU 1
	SWAP
	.loc stdlib.sol, 580
	PUSHCONT {
		.loc stdlib.sol, 591
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 585
		LDU 3
		LDMSGADDR
		LDMSGADDR
		LDVARUINT16
		LDDICT
		LDVARUINT16
		BLKDROP2 6, 1
		.loc stdlib.sol, 589
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

.fragment __importFee, {
	.loc stdlib.sol, 596
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 597
	LDU 2
	SWAP
	.loc stdlib.sol, 598
	EQINT 2
	PUSHCONT {
		.loc stdlib.sol, 601
		LDMSGADDR
		LDMSGADDR
		BLKDROP2 2, 1
		.loc stdlib.sol, 602
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 604
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

.fragment __qand, {
	.loc stdlib.sol, 665
	OVER
	ISNAN
	DUP
	PUSHCONT {
		DROP
		PUSH2 S1, S1
		ISNAN
		THROWIF 80
		NEQINT 0
	}
	IFNOT
	DUP
	PUSHCONT {
		DROP
		DUP
		ISNAN
		DUP
		PUSHCONT {
			DROP
			BLKPUSH 2, 0
			ISNAN
			THROWIF 80
			NEQINT 0
		}
		IFNOT
	}
	IF
	PUSHCONT {
		QAND
	}
	IFJMP
	.loc stdlib.sol, 669
	DROP2
	PUSHINT 0
	.loc stdlib.sol, 0
}

.fragment __qor, {
	.loc stdlib.sol, 673
	OVER
	ISNAN
	DUP
	PUSHCONT {
		DROP
		PUSH2 S1, S1
		ISNAN
		THROWIF 80
		NEQINT -1
	}
	IFNOT
	DUP
	PUSHCONT {
		DROP
		DUP
		ISNAN
		DUP
		PUSHCONT {
			DROP
			BLKPUSH 2, 0
			ISNAN
			THROWIF 80
			NEQINT -1
		}
		IFNOT
	}
	IF
	PUSHCONT {
		QOR
	}
	IFJMP
	.loc stdlib.sol, 677
	DROP2
	PUSHINT -1
	.loc stdlib.sol, 0
}

